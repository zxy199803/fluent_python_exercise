'''
若对象实现了__iadd__（就地加法）方法，+=为就地加法
否则a+=b与a=a+b一样，先计算a+b得到新的对象再赋值给a
总的来说，可变序列支持就地加法，不可变序列不支持这个操作
'''

# 增量乘法后列表ID没有变，新元素追加到列表上
l = [1, 2, 3]
print(id(l))
l *= 2
print(id(l))
print(l)

# 运用增量乘法后创建了新元组，因此对不可变序列进行重复拼接操作效率很低
# str是例外，Cython对str做了优化，str初始化内存时会留出额外的可扩展空间
t = (1, 2, 3)
print(id(t))
t *= 2
print(id(t))

'''
不要把可变对象放在元组里
'''
f = (1, 2, [20, 30])
f[2] += [50, 50]
print(f[2])

